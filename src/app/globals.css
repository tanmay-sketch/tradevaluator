@import "tailwindcss";
@import "tw-animate-css";

/* @tailwind base;
@tailwind components; */
@tailwind utilities;

@custom-variant dark (&:is(.dark *));

:root {
  --background: 0 0% 100%;
  --foreground: 222.2 84% 4.9%;
  --card: 0 0% 100%;
  --card-foreground: 222.2 84% 4.9%;
  --popover: 0 0% 100%;
  --popover-foreground: 222.2 84% 4.9%;
  --primary: 221.2 83.2% 53.3%;
  --primary-foreground: 210 40% 98%;
  --secondary: 210 40% 96.1%;
  --secondary-foreground: 222.2 47.4% 11.2%;
  --muted: 210 40% 96.1%;
  --muted-foreground: 215.4 16.3% 46.9%;
  --accent: 210 40% 96.1%;
  --accent-foreground: 222.2 47.4% 11.2%;
  --destructive: 0 84.2% 60.2%;
  --destructive-foreground: 210 40% 98%;
  --border: 214.3 31.8% 91.4%;
  --input: 214.3 31.8% 91.4%;
  --ring: 221.2 83.2% 53.3%;
  --radius: 0.75rem;
}

.dark {
  --background: 0 0% 0%; /* True black */
  --foreground: 210 40% 98%;
  --card: 0 0% 0%; /* Pure black */
  --card-foreground: 210 40% 98%;
  --popover: 0 0% 0%;
  --popover-foreground: 210 40% 98%;
  --primary: 217.2 91.2% 59.8%;
  --primary-foreground: 210 40% 98%;
  --secondary: 0 0% 0%;
  --secondary-foreground: 210 40% 98%;
  --muted: 0 0% 0%;
  --muted-foreground: 215 20.2% 65.1%;
  --accent: 0 0% 0%;
  --accent-foreground: 210 40% 98%;
  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 210 40% 98%;
  --border: 0 0% 15%; /* Slightly brighter for borders */
  --input: 0 0% 12%;
  --ring: 224.3 76.3% 48%;
}

/* Define border radius variables */
:root {
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

/* Custom styles for theme transition */
* {
  @apply transition-colors duration-200;
}

.disable-transitions * {
  transition: none !important;
}

/* Make dark mode true black */
.dark {
  background-color: #000;
  color: #fff;
}

/* Fix button colors without modifying shadcn components */
.dark button[data-slot="button"] {
  color: white;
}

/* Ensure consistent border-radius for cards */
[data-slot="card"] {
  border-radius: var(--radius-xl);
  overflow: hidden;
}

/* Fix card styling in dark mode */
.dark [data-slot="card"] {
  background-color: #000; /* Pure black */
  border-color: hsl(0, 0%, 15%); /* Match the border variable */
}

/* Fix dropdown styling in both light and dark mode */
[data-slot="dropdown-menu-content"] {
  background-color: white !important; /* Solid white background */
  border-color: hsl(214.3, 31.8%, 91.4%); /* Match the border variable */
}

.dark [data-slot="dropdown-menu-content"] {
  background-color: #000 !important; /* Pure black */
  border-color: hsl(0, 0%, 15%); /* Match the border variable */
}
